version: '3.3'

services:

  build_image:
    build: .
    image: services/notification:${VERSION} # use your own image name e.g. rancher/my-app:{VERSION}

  app_svc:
    container_name: notification-service
    image: services/notification:${VERSION}
    depends_on:
      - build_image
      - mongo
      - redis
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=mongo
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - 8084:8282
    networks:
      - svc-network
    command: sh -c 'scripts/startup.sh'
    #command: sh -c 'scripts/wait-for.sh mongo:27020 -- bash scripts/startup.sh'

  mongo:
    container_name: mongo
    image: mongo:4-bionic
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
    ports:
      - 27020:27017
    volumes:
      #- dbdata:/data/db # this is not working for some reason
      - dbdata:/dump
    networks:
      - svc-network

  redis:
    container_name: redis
    image: redis:6-buster
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data
    networks:
      - svc-network

networks:
  svc-network:
    driver: bridge

volumes:
  dbdata:
  redis-data:
